{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport ExpoSplashScreen from \"./ExpoSplashScreen\";\nexport function preventAutoHideAsync() {\n  return _regeneratorRuntime.async(function preventAutoHideAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (ExpoSplashScreen.preventAutoHideAsync) {\n          _context.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n      case 2:\n        _context.next = 4;\n        return _regeneratorRuntime.awrap(ExpoSplashScreen.preventAutoHideAsync());\n      case 4:\n        return _context.abrupt(\"return\", _context.sent);\n      case 5:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function hideAsync() {\n  return _regeneratorRuntime.async(function hideAsync$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        if (ExpoSplashScreen.hideAsync) {\n          _context2.next = 2;\n          break;\n        }\n        throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n      case 2:\n        _context2.next = 4;\n        return _regeneratorRuntime.awrap(ExpoSplashScreen.hideAsync());\n      case 4:\n        return _context2.abrupt(\"return\", _context2.sent);\n      case 5:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport function hide() {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\nexport function preventAutoHide() {\n  console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');\n  preventAutoHideAsync();\n}","map":{"version":3,"sources":["../src/SplashScreen.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAO,gBAAgB;AAMvB,OAAO,SAAe,oBAAoB;EAAA;IAAA;MAAA;QAAA,IACnC,gBAAgB,CAAC,oBAAoB;UAAA;UAAA;QAAA;QAAA,MAClC,IAAI,mBAAmB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC;MAAA;QAAA;QAAA,iCAEhE,gBAAgB,CAAC,oBAAoB,EAAE;MAAA;QAAA;MAAA;MAAA;QAAA;IAAA;EAAA;AAAA;AAStD,OAAO,SAAe,SAAS;EAAA;IAAA;MAAA;QAAA,IACxB,gBAAgB,CAAC,SAAS;UAAA;UAAA;QAAA;QAAA,MACvB,IAAI,mBAAmB,CAAC,oBAAoB,EAAE,WAAW,CAAC;MAAA;QAAA;QAAA,iCAErD,gBAAgB,CAAC,SAAS,EAAE;MAAA;QAAA;MAAA;MAAA;QAAA;IAAA;EAAA;AAAA;AAO3C,OAAM,SAAU,IAAI,GAAA;EAClB,OAAO,CAAC,IAAI,CAAC,yEAAyE,CAAC;EACvF,SAAS,EAAE;AACb;AAMA,OAAM,SAAU,eAAe,GAAA;EAC7B,OAAO,CAAC,IAAI,CACV,+FAA+F,CAChG;EACD,oBAAoB,EAAE;AACxB","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}