{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\nvar minBoundary = 1;\nvar maxBoundary = 100;\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n    onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n  var _useState = useState(initialGuess),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentGuess = _useState2[0],\n    setCurrentGuess = _useState2[1];\n  var _useState3 = useState([initialGuess]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    guessRounds = _useState4[0],\n    setGuessRounds = _useState4[1];\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver();\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n  function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < userNumber || direction === \"greater\" && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [{\n        text: \"Sorry!\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  }\n  var guessRoundsListLength = guessRounds.length;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponent's Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.instructionText,\n        children: \"Higher or lower?\"\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, \"greater\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: \"white\"\n            })\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.listContainer,\n      children: _jsx(FlatList, {\n        data: guessRounds,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNumber: guessRoundsListLength - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n}\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["useState","useEffect","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","GuessLogItem","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","guessRounds","setGuessRounds","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","prevGuessRounds","guessRoundsListLength","length","styles","screen","instructionText","buttonsContainer","buttonContainer","bind","listContainer","itemData","index","item","StyleSheet","create","flex","padding","marginBottom","flexDirection"],"sources":["C:/Users/ACER/Desktop/rnMiniGame/starting-project/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { View, StyleSheet, Alert, Text, FlatList } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nimport NumberContainer from \"../components/game/NumberContainer\";\r\nimport Card from \"../components/ui/Card\";\r\nimport InstructionText from \"../components/ui/InstructionText\";\r\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\r\nimport Title from \"../components/ui/Title\";\r\nimport GuessLogItem from \"../components/game/GuessLogItem\";\r\n\r\nfunction generateRandomBetween(min, max, exclude) {\r\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n\r\n  if (rndNum === exclude) {\r\n    return generateRandomBetween(min, max, exclude);\r\n  } else {\r\n    return rndNum;\r\n  }\r\n}\r\n\r\nlet minBoundary = 1;\r\nlet maxBoundary = 100;\r\n\r\nfunction GameScreen({ userNumber, onGameOver }) {\r\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\r\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\r\n  const [guessRounds, setGuessRounds] = useState([initialGuess]);\r\n\r\n  useEffect(() => {\r\n    if (currentGuess === userNumber) {\r\n      onGameOver();\r\n    }\r\n  }, [currentGuess, userNumber, onGameOver]);\r\n\r\n  useEffect(() => {\r\n    minBoundary = 1;\r\n    maxBoundary = 100;\r\n  }, []);\r\n\r\n  function nextGuessHandler(direction) {\r\n    // direction => 'lower', 'greater'\r\n    if (\r\n      (direction === \"lower\" && currentGuess < userNumber) ||\r\n      (direction === \"greater\" && currentGuess > userNumber)\r\n    ) {\r\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [\r\n        { text: \"Sorry!\", style: \"cancel\" },\r\n      ]);\r\n      return;\r\n    }\r\n\r\n    if (direction === \"lower\") {\r\n      maxBoundary = currentGuess;\r\n    } else {\r\n      minBoundary = currentGuess + 1;\r\n    }\r\n\r\n    const newRndNumber = generateRandomBetween(\r\n      minBoundary,\r\n      maxBoundary,\r\n      currentGuess\r\n    );\r\n    setCurrentGuess(newRndNumber);\r\n    setGuessRounds((prevGuessRounds) => [newRndNumber, ...prevGuessRounds]);\r\n  }\r\n\r\n  const guessRoundsListLength = guessRounds.length;\r\n\r\n  return (\r\n    <View style={styles.screen}>\r\n      <Title>Opponent's Guess</Title>\r\n      <NumberContainer>{currentGuess}</NumberContainer>\r\n      <Card>\r\n        <InstructionText style={styles.instructionText}>\r\n          Higher or lower?\r\n        </InstructionText>\r\n        <View style={styles.buttonsContainer}>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\r\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\r\n            </PrimaryButton>\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\r\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\r\n            </PrimaryButton>\r\n          </View>\r\n        </View>\r\n      </Card>\r\n      <View style={styles.listContainer}>\r\n        {/* {guessRounds.map(guessRound => <Text key={guessRound}>{guessRound}</Text>)} */}\r\n        <FlatList\r\n          data={guessRounds}\r\n          renderItem={(itemData) => (\r\n            <GuessLogItem\r\n              roundNumber={guessRoundsListLength - itemData.index}\r\n              guess={itemData.item}\r\n            />\r\n          )}\r\n          keyExtractor={(item) => item}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default GameScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n    padding: 24,\r\n  },\r\n  instructionText: {\r\n    marginBottom: 12,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}