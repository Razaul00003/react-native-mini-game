{"ast":null,"code":"import normalizeColor from 'normalize-css-color';\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  }\n  var int32Color = normalizeColor(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\nexport default processColor;","map":{"version":3,"names":["normalizeColor","processColor","color","undefined","int32Color"],"sources":["C:/Users/ACER/Desktop/rnMiniGame/starting-project/node_modules/react-native-web/src/exports/processColor/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport normalizeColor from 'normalize-css-color';\n\nconst processColor = (color?: string | number): ?number => {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  // convert number and hex\n  let int32Color = normalizeColor(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = ((int32Color << 24) | (int32Color >>> 8)) >>> 0;\n\n  return int32Color;\n};\n\nexport default processColor;\n"],"mappings":"AAUA,OAAOA,cAAc,MAAM,qBAAqB;AAEhD,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAuB,EAAc;EACzD,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EAAE;IACzC,OAAOA,KAAK;EACd;EAGA,IAAIE,UAAU,GAAGJ,cAAc,CAACE,KAAK,CAAC;EACtC,IAAIE,UAAU,KAAKD,SAAS,IAAIC,UAAU,KAAK,IAAI,EAAE;IACnD,OAAOD,SAAS;EAClB;EAEAC,UAAU,GAAG,CAAEA,UAAU,IAAI,EAAE,GAAKA,UAAU,KAAK,CAAE,MAAM,CAAC;EAE5D,OAAOA,UAAU;AACnB,CAAC;AAED,eAAeH,YAAY"},"metadata":{},"sourceType":"module"}